<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fuzhutech.dao.auth.ResourcePermissionMapper">
  <resultMap id="BaseResultMap" type="com.fuzhutech.entity.auth.ResourcePermission">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="permission_id" jdbcType="INTEGER" property="permissionId" />
    <result column="resource_class" jdbcType="VARCHAR" property="resourceClass" />
    <result column="resource_id" jdbcType="INTEGER" property="resourceId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, permission_id, resource_class, resource_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from auth_resource_permission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth_resource_permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fuzhutech.entity.auth.ResourcePermission">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into auth_resource_permission (permission_id, resource_class, resource_id
      )
    values (#{permissionId,jdbcType=INTEGER}, #{resourceClass,jdbcType=VARCHAR}, #{resourceId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fuzhutech.entity.auth.ResourcePermission">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into auth_resource_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="permissionId != null">
        permission_id,
      </if>
      <if test="resourceClass != null">
        resource_class,
      </if>
      <if test="resourceId != null">
        resource_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="permissionId != null">
        #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="resourceClass != null">
        #{resourceClass,jdbcType=VARCHAR},
      </if>
      <if test="resourceId != null">
        #{resourceId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fuzhutech.entity.auth.ResourcePermission">
    update auth_resource_permission
    <set>
      <if test="permissionId != null">
        permission_id = #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="resourceClass != null">
        resource_class = #{resourceClass,jdbcType=VARCHAR},
      </if>
      <if test="resourceId != null">
        resource_id = #{resourceId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fuzhutech.entity.auth.ResourcePermission">
    update auth_resource_permission
    set permission_id = #{permissionId,jdbcType=INTEGER},
      resource_class = #{resourceClass,jdbcType=VARCHAR},
      resource_id = #{resourceId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, permission_id, resource_class, resource_id
    from auth_resource_permission
  </select>
  <select id="selectByPageInfo" parameterType="PageInfo" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from auth_resource_permission inner join (select id from auth_resource_permission order by id asc limit #{offset}, #{rows}) t2 using(id)
  </select>
  <select id="countByPageInfo" parameterType="PageInfo" resultType="java.lang.Integer">
    select count(id) count from auth_resource_permission
  </select>
  <select id="selectByWhere" parameterType="com.fuzhutech.entity.auth.ResourcePermission" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from auth_resource_permission
    <trim prefix="WHERE" prefixOverrides="AND|OR" suffixOverrides="AND|OR">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER} and 
      </if>
      <if test="permissionId != null">
        permission_id = #{permissionId,jdbcType=INTEGER} and 
      </if>
      <if test="resourceClass != null">
        resource_class = #{resourceClass,jdbcType=VARCHAR} and 
      </if>
      <if test="resourceId != null">
        resource_id = #{resourceId,jdbcType=INTEGER} and 
      </if>
    </trim>
  </select>
  <delete id="deleteByWhere" parameterType="com.fuzhutech.entity.auth.ResourcePermission">
    delete from auth_resource_permission
    <where>
      <if test="id != null">
        id = #{id,jdbcType=INTEGER} and 
      </if>
      <if test="permissionId != null">
        permission_id = #{permissionId,jdbcType=INTEGER} and 
      </if>
      <if test="resourceClass != null">
        resource_class = #{resourceClass,jdbcType=VARCHAR} and 
      </if>
      <if test="resourceId != null">
        resource_id = #{resourceId,jdbcType=INTEGER} and 
      </if>
    </where>
  </delete>
</mapper>