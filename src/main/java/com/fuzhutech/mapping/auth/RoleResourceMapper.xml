<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fuzhutech.dao.auth.RoleResourceMapper">
  <resultMap id="BaseResultMap" type="com.fuzhutech.entity.auth.RoleResource">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="resource_id" jdbcType="INTEGER" property="resourceId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_modify_time" jdbcType="TIMESTAMP" property="lastModifyTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, resource_id, create_time, last_modify_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from auth_role_resource
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth_role_resource
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fuzhutech.entity.auth.RoleResource">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into auth_role_resource (role_id, resource_id, create_time, 
      last_modify_time)
    values (#{roleId,jdbcType=INTEGER}, #{resourceId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastModifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.fuzhutech.entity.auth.RoleResource">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into auth_role_resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="resourceId != null">
        resource_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastModifyTime != null">
        last_modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="resourceId != null">
        #{resourceId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null">
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fuzhutech.entity.auth.RoleResource">
    update auth_role_resource
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="resourceId != null">
        resource_id = #{resourceId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null">
        last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fuzhutech.entity.auth.RoleResource">
    update auth_role_resource
    set role_id = #{roleId,jdbcType=INTEGER},
      resource_id = #{resourceId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, role_id, resource_id, create_time, last_modify_time
    from auth_role_resource
  </select>
  <select id="selectByPageInfo" parameterType="PageInfo" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from auth_role_resource inner join (select id from auth_role_resource order by id asc limit #{offset}, #{rows}) t2 using(id)
  </select>
  <select id="countByPageInfo" parameterType="PageInfo" resultType="java.lang.Integer">
    select count(id) count from auth_role_resource
  </select>
  <select id="selectByWhere" parameterType="com.fuzhutech.entity.auth.RoleResource" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from auth_role_resource
    <trim prefix="WHERE" prefixOverrides="AND|OR" suffixOverrides="AND|OR">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER} and 
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER} and 
      </if>
      <if test="resourceId != null">
        resource_id = #{resourceId,jdbcType=INTEGER} and 
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP} and 
      </if>
      <if test="lastModifyTime != null">
        last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP} and 
      </if>
    </trim>
  </select>
  <delete id="deleteByWhere" parameterType="com.fuzhutech.entity.auth.RoleResource">
    delete from auth_role_resource
    <where>
      <if test="id != null">
        id = #{id,jdbcType=INTEGER} and 
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER} and 
      </if>
      <if test="resourceId != null">
        resource_id = #{resourceId,jdbcType=INTEGER} and 
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP} and 
      </if>
      <if test="lastModifyTime != null">
        last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP} and 
      </if>
    </where>
  </delete>

  <insert id="insertResourceWithRole" parameterType="java.util.HashMap">
    insert into auth_role_resource (resource_id, role_id)
    SELECT b.id as resource_id, #{roleId,jdbcType=INTEGER} as role_id
    FROM auth_resource b
    WHERE b.id IN
    <foreach item="resourceId" collection="list" open="(" separator="," close=")">#{resourceId} </foreach>
    AND NOT EXISTS ( SELECT c.id FROM auth_role_resource c WHERE c.resource_id = b.id AND c.role_id = #{roleId,jdbcType=INTEGER})
  </insert>

  <delete id="deleteResourceWithRole" parameterType="java.util.HashMap">
    DELETE FROM auth_role_resource
    WHERE role_id = #{roleId,jdbcType=INTEGER}
    <if test="list != null">
      AND resource_id NOT IN <foreach item="resourceId" collection="list" open="(" separator="," close=")"> #{resourceId}</foreach>
    </if>
  </delete>

</mapper>